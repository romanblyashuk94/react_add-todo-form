{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","getUserById","usersFromServer","find","createNewTodo","userId","preparedTodos","App","useState","setTodos","setTitle","selectedUserId","setSelectedUser","titleErrorStatus","setTitleError","userErorStatus","setUserError","Paper","elevation","onSubmit","event","preventDefault","trim","nextId","Math","max","prevTodos","TextField","type","label","placeholder","variant","value","onChange","target","error","FormControl","fullWidth","Select","labelId","String","Number","MenuItem","disabled","Button","style","minWidth","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.872c0d35.chunk.js","sourcesContent":["import { FC } from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: FC<Props> = ({ user: { name, email } }) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id, completed, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport './TodoList.scss';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC, FormEvent, useState } from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport './App.scss';\nimport { Button, Paper } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nconst getUserById = (id: number) => (\n  usersFromServer.find(user => user.id === id) || null\n);\n\nconst createNewTodo = (id: number, title: string, userId: number): Todo => ({\n  id,\n  title,\n  completed: false,\n  userId,\n  user: getUserById(userId),\n});\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUser] = useState(0);\n  const [titleErrorStatus, setTitleError] = useState(false);\n  const [userErorStatus, setUserError] = useState(false);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title.trim() === '' || selectedUserId === 0) {\n      setTitleError(title.trim() === '');\n      setUserError(selectedUserId === 0);\n\n      return;\n    }\n\n    const nextId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    setTodos(prevTodos => ([\n      ...prevTodos,\n      createNewTodo(nextId, title, selectedUserId),\n    ]));\n\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handteTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: SelectChangeEvent) => {\n    setSelectedUser(Number(event.target.value));\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Paper className=\"App__content\" elevation={5}>\n        <h1>Add todo form</h1>\n\n        <form className=\"App__form\" onSubmit={handleSubmit}>\n          <div className=\"App__form-field\">\n            <TextField\n              className=\"App__form-input\"\n              type=\"text\"\n              id=\"outlined-basic\"\n              label=\"Title\"\n              placeholder=\"Enter Title\"\n              variant=\"outlined\"\n              data-cy=\"titleInput\"\n              value={title}\n              onChange={handteTitleChange}\n              error={titleErrorStatus}\n            />\n            {titleErrorStatus && (\n              <span className=\"App__form-eror error\">Please enter a title</span>\n            )}\n          </div>\n\n          <div className=\"App__form-field\">\n            <FormControl fullWidth>\n              <Select\n                data-cy=\"userSelect\"\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={String(selectedUserId)}\n                onChange={handleUserChange}\n                error={userErorStatus}\n              >\n                <MenuItem value={0} disabled>Choose a user</MenuItem>\n                {usersFromServer.map(({ id, name }) => (\n                  <MenuItem key={id} value={id}>{name}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            {userErorStatus && (\n              <span className=\"App__form-eror error\">Please choose a user</span>\n            )}\n          </div>\n\n          <div className=\"App__form-btn\">\n            <Button\n              variant=\"contained\"\n              type=\"submit\"\n              data-cy=\"submitButton\"\n              style={{ minWidth: '150px' }}\n            >\n              Add\n            </Button>\n          </div>\n        </form>\n\n        <TodoList todos={todos} />\n      </Paper>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}